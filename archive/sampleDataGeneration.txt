import pandas as pd
import numpy as np
from datetime import datetime, timedelta
import random
import string

# Helper function to generate random strings
def random_string(length=10):
    return ''.join(random.choice(string.ascii_letters) for _ in range(length))

# Helper function to generate random date
def random_date(start, end):
    return (start + timedelta(days=random.randint(0, int((end - start).days)))).isoformat()

# Generate sample data
np.random.seed(42)
num_samples = 100
data = {
    "accessible_ids": [np.random.choice(range(1000, 1100), size=random.randint(1, 5), replace=False).tolist() for _ in range(num_samples)],
    "age": np.random.randint(20, 60, size=num_samples),
    "candidate_id": np.random.choice(range(1, 10000), size=num_samples, replace=False),
    "created_at": [random_date(datetime(2020, 1, 1), datetime(2024, 1, 1)) for _ in range(num_samples)],
    "creator_name": [random_string() for _ in range(num_samples)],
    "present_ctc": np.random.randint(50000, 200000, size=num_samples),
    "current_company": [random_string(15) for _ in range(num_samples)],
    "current_location": [random_string(15) for _ in range(num_samples)],
    "custom_fields": [{'name': random_string(5), 'value': random_string(10)} for _ in range(num_samples)],
    "education": [[random_string(10) for _ in range(random.randint(1, 3))] for _ in range(num_samples)],
    "expected_ctc": np.random.randint(60000, 250000, size=num_samples),
    "experience": np.random.randint(1, 20, size=num_samples),
    "formatted_candidate_history": [{'job_title': random_string(10), 'lead_status': random_string(10), 'status_comment': random_string(20), 'last_updated_at': random_date(datetime(2020, 1, 1), datetime(2024, 1, 1)), 'created_by': np.random.randint(1, 1000)} for _ in range(num_samples)],
    "formatted_ctc": [{'formatted_present_ctc': f"{np.random.randint(50000, 200000)} USD", 'formatted_expected_ctc': f"{np.random.randint(60000, 250000)} USD"} for _ in range(num_samples)],
    "formatted_current_company": [{'from': random_date(datetime(2010, 1, 1), datetime(2015, 1, 1)), 'profile': random_string(10), 'company': random_string(15)} for _ in range(num_samples)],
    # "formatted_education":[{'passing_year':}]
    "formatted_education": [{"passing_year": 2020, "college": "College", "education": "Education"} for _ in range(100)],
    "formatted_previous_company": [{"from":random_date(datetime(2010, 1, 1),datetime(2015, 1, 1)),"to":random_date(datetime(2010, 1, 1), datetime(2015, 1, 1)),"profile":random_string(10), 'company': random_string(15)} for _ in range(num_samples)],
    "gender": [random.choice(['Male', 'Female', 'Other']) for _ in range(num_samples)],
    "headline": [random_string(30) for _ in range(num_samples)],
    "job_ids": [np.random.choice(range(1000, 1100), size=random.randint(1, 5), replace=False).tolist() for _ in range(num_samples)],
    "key_skills": [[random_string(10) for _ in range(random.randint(1, 5))] for _ in range(num_samples)],
    "notice_period": np.random.randint(15, 90, size=num_samples),
    "organization_id": np.random.randint(1, 1000, size=num_samples),
    "name": [random_string(10) for _ in range(num_samples)],
    "other_skills": [[random_string(10) for _ in range(random.randint(1, 5))] for _ in range(num_samples)],
    "preferred_location": [[random_string(10) for _ in range(random.randint(1, 3))] for _ in range(num_samples)],
    "previous_company": [[random_string(10) for _ in range(random.randint(1, 3))] for _ in range(num_samples)],
    "profile": [[random_string(10) for _ in range(random.randint(1, 3))] for _ in range(num_samples)],
    "profile_hash": [random_string(20) for _ in range(num_samples)],
    "resume": [random_string(50) for _ in range(num_samples)],
    "supplier_ids": [np.random.choice(range(1000, 1100), size=random.randint(1, 5), replace=False).tolist() for _ in range(num_samples)],
    "updated_at": [random_date(datetime(2020, 1, 1), datetime(2024, 1, 1)) for _ in range(num_samples)],
}

# Create DataFrame
df = pd.DataFrame(data)

# Output to CSV
df.to_csv('sample_candidates_data2.csv', index=False)
print("Sample data created successfully and saved to 'sample_candidates_data2.csv'")

# Save to Excel
df.to_excel('sample_candidates_data2.xlsx', index=False, engine='openpyxl')

